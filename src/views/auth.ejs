<!DOCTYPE html>
<html lang="en" class="h-full bg-white">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Login</title>
  <script src="https://cdn.tailwindcss.com?plugins=forms"></script>
  <script>
    tailwind.config = {
      theme: {
        extend: {
          colors: {
            clifford: '#da373d',
          }
        }
      }
    }
  </script>
</head>

<body class="h-full">
  <div class="h-full" id="app">
    <div class="flex min-h-full flex-col justify-center px-6 py-12 lg:px-8">

      <div v-if="isLogin">
        <div class="sm:mx-auto sm:w-full sm:max-w-sm">
          <h2 class="mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900">Sign In</h2>
        </div>

        <div class="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">
          <form class="space-y-6" @submit.prevent="login">
            <div>
              <label for="email" class="block text-sm font-medium leading-6 text-gray-900">Username</label>
              <div class="mt-2">
                <input id="email" v-model.trim="username" type="text" required
                  class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-green-600 sm:text-sm sm:leading-6">
              </div>
              <span class="text-xs text-red-700">{{ errorMessage }}</span>
            </div>

            <div>
              <div class="flex items-center justify-between">
                <label for="password" class="block text-sm font-medium leading-6 text-gray-900">Password</label>
              </div>
              <div class="mt-2">
                <input type="password" autocomplete="current-password" v-model.trim="password" required
                  class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-green-600 sm:text-sm sm:leading-6">
              </div>
            </div>

            <div>
              <button :disabled="submitting" :class="{'opacity-50':submitting}" type="submit"
                class="flex w-full justify-center rounded-md bg-green-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-green-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-green-600">
                {{ submitting ? 'Working...' : 'Login'}}
              </button>
            </div>
          </form>
        </div>
      </div>
      <div v-else>
        <div class="sm:mx-auto sm:w-full sm:max-w-sm">
          <h2 class="mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900">Sign Up</h2>
        </div>

        <div class="mt-10 sm:mx-auto sm:w-full sm:max-w-sm">
          <form class="space-y-6" @submit.prevent="register">
            <div>
              <label for="email" class="block text-sm font-medium leading-6 text-gray-900">Username</label>
              <div class="mt-2">
                <input id="email" v-model.trim="username" type="text" required
                  class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-green-600 sm:text-sm sm:leading-6">
              </div>
              <span class="text-xs text-red-700">{{ errorMessage }}</span>
            </div>

            <div>
              <div class="flex items-center justify-between">
                <label for="password" class="block text-sm font-medium leading-6 text-gray-900">Password</label>
              </div>
              <div class="mt-2">
                <input type="password" autocomplete="current-password" v-model.trim="password" required
                  class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-green-600 sm:text-sm sm:leading-6">
              </div>
            </div>

            <div>
              <div class="flex items-center justify-between">
                <label for="password" class="block text-sm font-medium leading-6 text-gray-900">Confirm Password</label>
              </div>
              <div class="mt-2">
                <input type="password" autocomplete="current-password" v-model.trim="password_confirm" required
                  class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-green-600 sm:text-sm sm:leading-6">
              </div>
            </div>

            <div>
              <button :disabled="submitting" :class="{'opacity-50':submitting}" type="submit"
                class="flex w-full justify-center rounded-md bg-green-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-green-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-green-600">
                {{ submitting ? 'Working...' : 'Sign Up'}}
              </button>
            </div>
          </form>
        </div>
      </div>
      <p class="mt-10 text-center text-sm text-gray-500">
        {{ isLogin ? 'Not' : 'Already'}} a member?
        <a @click.prevent="isLogin=!isLogin" href="#"
          class="font-semibold leading-6 text-green-600 hover:text-green-500">{{ isLogin ? 'Register' : 'Login'}}
          here</a>
      </p>
    </div>
  </div>
  <script type="module">
    import { createApp } from 'https://cdnjs.cloudflare.com/ajax/libs/vue/3.5.12/vue.esm-browser.prod.min.js'

    createApp({
      data() {
        return {
          username: "",
          password: "",
          password_confirm: "",
          isLogin: true,
          submitting: false,
          errorMessage: ""
        }
      },
      methods: {
        async login() {
          if (this.username === "") {
            alert("username is required")
            return
          }

          if (this.password === "") {
            alert("password is required")
            return
          }
          this.submitting = true

          // try {
          const res = await fetch("/auth/login", {
            method: "POST",
            body: JSON.stringify({
              username: this.username,
              password: this.password
            }),
            headers: {
              "Content-Type": "application/json",
            }
          })
          this.submitting = false

          const data = await res.json()

          if (data.statusCode >= 400) {
            this.errorMessage = data.message
          } else {
            this.errorMessage = ""
            window.location.replace("/")
          }
        },
        async register() {
          if (this.username === "") {
            alert("username is required")
            return
          }

          if (this.password === "") {
            alert("password is required")
            return
          }

          if (this.password_confirm === "") {
            alert("password confirmation is required")
            return
          }

          this.submitting = true

          const res = await fetch("/auth/register", {
            method: "POST",
            body: JSON.stringify({
              username: this.username,
              password: this.password,
              password_confirm: this.password_confirm,
            }),
            headers: {
              "Content-Type": "application/json",
            }
          })

          this.submitting = false

          const data = await res.json()

          if (data.statusCode >= 400) {
            this.errorMessage = data.message
          } else {
            this.errorMessage = ""
            window.location.replace("/")
          }

        }
      },
      mounted() {}

    }).mount('#app')
  </script>
</body>

</html>